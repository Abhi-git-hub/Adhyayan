<%- include('../partials/header') %>

<div class="container mt-4">
  <h2>Notes & Tests</h2>
  
  <!-- Upload Form -->
  <div class="card mb-4">
    <div class="card-body">
      <h5 class="card-title">Upload New File</h5>
      <form id="uploadForm" enctype="multipart/form-data">
        <div class="mb-3">
          <label for="title" class="form-label">Title</label>
          <input type="text" class="form-control" id="title" name="title" required>
        </div>
        
        <div class="mb-3">
          <label for="batch" class="form-label">Batch</label>
          <select class="form-select" id="batch" name="batch" required>
            <% batches.forEach(batch => { %>
              <option value="<%= batch %>"><%= batch %></option>
            <% }); %>
          </select>
        </div>
        
        <div class="mb-3">
          <label for="subject" class="form-label">Subject</label>
          <select class="form-select" id="subject" name="subject" required>
            <% subjects.forEach(subject => { %>
              <option value="<%= subject %>"><%= subject %></option>
            <% }); %>
          </select>
        </div>
        
        <div class="mb-3">
          <label for="type" class="form-label">Type</label>
          <select class="form-select" id="type" name="type" required>
            <option value="note">Note</option>
            <option value="test">Test</option>
          </select>
        </div>
        
        <div class="mb-3">
          <label for="description" class="form-label">Description</label>
          <textarea class="form-control" id="description" name="description" rows="3"></textarea>
        </div>
        
        <div class="mb-3">
          <label for="pdfFile" class="form-label">PDF File</label>
          <input type="file" class="form-control" id="pdfFile" name="pdfFile" accept=".pdf" required>
        </div>
        
        <button type="submit" class="btn btn-primary">Upload</button>
      </form>
    </div>
  </div>
  
  <!-- Existing Files -->
  <div class="card">
    <div class="card-body">
      <h5 class="card-title">Uploaded Files</h5>
      <div class="table-responsive">
        <table class="table">
          <thead>
            <tr>
              <th>Title</th>
              <th>Batch</th>
              <th>Subject</th>
              <th>Type</th>
              <th>Upload Date</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody>
            <% notes.forEach(note => { %>
              <tr>
                <td><%= note.title %></td>
                <td><%= note.batch %></td>
                <td><%= note.subject %></td>
                <td><%= note.type %></td>
                <td><%= note.uploadDate.toLocaleDateString() %></td>
                <td>
                  <a href="<%= note.fileUrl %>" class="btn btn-sm btn-info" target="_blank">View</a>
                  <button class="btn btn-sm btn-danger delete-note" data-note-id="<%= note._id %>">Delete</button>
                </td>
              </tr>
            <% }); %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const uploadForm = document.getElementById('uploadForm');
  const deleteButtons = document.querySelectorAll('.delete-note');
  
  // Handle file upload
  uploadForm.addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    
    try {
      const response = await fetch('/teacher/notes/upload', {
        method: 'POST',
        body: formData
      });
      
      const result = await response.json();
      
      if (result.success) {
        alert('File uploaded successfully!');
        location.reload();
      } else {
        alert('Error uploading file: ' + result.error);
      }
    } catch (error) {
      console.error('Error:', error);
      alert('Error uploading file. Please try again.');
    }
  });
  
  // Handle note deletion
  deleteButtons.forEach(button => {
    button.addEventListener('click', async function() {
      if (!confirm('Are you sure you want to delete this file?')) {
        return;
      }
      
      const noteId = this.dataset.noteId;
      
      try {
        const response = await fetch(`/teacher/notes/${noteId}`, {
          method: 'DELETE'
        });
        
        const result = await response.json();
        
        if (result.success) {
          alert('File deleted successfully!');
          location.reload();
        } else {
          alert('Error deleting file: ' + result.error);
        }
      } catch (error) {
        console.error('Error:', error);
        alert('Error deleting file. Please try again.');
      }
    });
  });
});
</script>

<%- include('../partials/footer') %> 